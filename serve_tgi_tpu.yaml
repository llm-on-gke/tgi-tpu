apiVersion: apps/v1
kind: Deployment
metadata:
  name: tgi-tpu-deployment
spec:
  selector:
    matchLabels:
      app: tgi-tpu-server
  replicas: 1  # number of nodes in node-pool
  template:
    metadata:
      labels:
        app: tgi-tpu-server
    spec:
      #hostNetwork: true
      #dnsPolicy: ClusterFirstWithHostNet
      nodeSelector:
        cloud.google.com/gke-tpu-topology: 1x1 #  target topology
        cloud.google.com/gke-tpu-accelerator: tpu-v5-lite-podslice
        #cloud.google.com/gke-spot: "true"
      volumes:
       - name: dshm
         emptyDir:
              medium: Memory
       - name: data
         emptyDir: {}
      containers:
      - name: tgi-tpu-server
        securityContext:
            privileged: true
        image: us-east1-docker.pkg.dev/$PROJECT_ID/gke-llm/optimum-tgi-tpu:latest
        env:
            - name: HF_TOKEN #HUGGING_FACE_HUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: huggingface
                  key: HF_TOKEN
            - name: shm-size
              value: 1g
            - name: MODEL_ID
              value: google/gemma-2b-it
            - name: TGI_MAX_CONCURRENT_REQUESTS 
              value: "4"
            - name: TGI_MAX_INPUT_TOKENS
              value: "32"
            - name: TGI_MAX_TOTAL_TOKENS
              value: "64"
            - name: TGI_MAX_BATCH_SIZE
              value: "1"
        ports:
        - containerPort: 8080
        resources:
          requests:
            google.com/tpu: 1  # TPU chip request
          limits:
            google.com/tpu: 1  # TPU chip request
        volumeMounts:
            - mountPath: /dev/shm
              name: dshm
            - mountPath: /data
              name: data

---
apiVersion: v1
kind: Service
metadata:
  name: tgi-tpu-inference-server
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
  labels:
    app: tgi-tpu-inference-server   
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
      name: tgi-inference-server
    
  selector:
    app: tgi-tpu-server

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tgi-tpu-ingress
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "tgi-tpu-ingress"
spec:
  rules:
  - http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: tgi-tpu-inference-server
            port:
              number: 8080
             